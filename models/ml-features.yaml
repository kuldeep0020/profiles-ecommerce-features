models:
  - name: e_comm_feature_id_stitcher
    model_type: id_stitcher
    model_spec:
      validity_time: 24h # 1 day
      entity_key: user
      main_id_type: main_id
      edge_sources:
      # Specify from inputs.yaml file
        - input: identifies_1
        - input: tracks_1
        - input: product_added_1
        - input: order_completed_1
        - input: checkout_step_completed_1
  - name: e_comm_feature
    model_type: feature_table_model
    model_spec:
      validity_time: 24h # 1 day
      id_stitching:
        model: e_comm_feature_id_stitcher
      features:

# Latest Country
        - tablevar:
            name: max_timestamp_for_country
            ref:
              input: identifies_1
            filter: properties_country is not null and properties_country != ''
            value: max(timestamp)

        - tablefeature:
            name: latest_country
            ref:
              input: identifies_1
            filter: timestamp = max_timestamp_for_country and main_id is not null
            value: max(properties_country)

# Latest State
        - tablevar:
            name: max_timestamp_for_state
            ref:
              input: identifies_1
            filter: properties_state is not null and properties_state != ''
            value: max(timestamp)

        - tablefeature:
            name: latest_state
            ref:
              input: identifies_1
            filter: timestamp = max_timestamp_for_state and main_id is not null
            value: max(properties_state)

# has mobile app?
        - tablefeature:
            name: has_mobile_app
            ref:
              input: identifies_1
            filter: main_id is not null
            value: max(case when lower(context_device_type) in ('android', 'ios') then 1 else 0 end)

# Campaign source
        - tablefeature:
            name: campaign_source
            ref:
              input: identifies_1
            filter: main_id is not null
            value: (array_agg(distinct context_campaign_source ))

# Is active on website?
        - tablefeature:
            name: is_active_on_website
            ref:
              input: identifies_1
            filter: main_id is not null
            value: max(case when lower(CONTEXT_DEVICE_TYPE) like '%pc' then 1 else 0 end)

# Payment Method
        - tablefeature:
            name: payment_methods
            ref:
              input: checkout_step_completed_1
            filter: main_id is not null
            value: (array_agg(distinct properties_payment_method))

# Gender
        - tablevar:
            name: max_timestamp_for_gender
            ref:
              input: identifies_1
            filter: properties_gender is not null and properties_gender != ''
            value: max(timestamp)

        - tablefeature:
            name: gender
            ref:
              input: identifies_1
            filter: timestamp = max_timestamp_for_gender and main_id is not null
            value: max(properties_gender)

# Days since account creation
        - tablevar:
            name: min_timestamp_for_acc
            ref:
              input: identifies_1
            filter: timestamp is not null and timestamp != '' and main_id is not null
            value: min(timestamp)

        - tablevar:
            name: least_ref_timestamp
            ref:
              input: identifies_1
            # Here you can use any date value instead of '2022.09.23' as a reference
            value: least(TO_DATE('2022.09.23', 'YYYY.MM.DD'), CURRENT_TIMESTAMP())

        - feature:
            name: days_Since_Account_creation
            value: TO_DATE(least_ref_timestamp) - TO_DATE(min_timestamp_for_acc)

# Age
        - tablevar:
            name: max_timestamp_for_dob
            ref:
              input: identifies_1
            filter: properties_birthday is not null and properties_birthday != ''
            value: max(timestamp)

        - tablevar:
            name: max_timestamp_dob
            ref:
              input: identifies_1
            filter: timestamp = max_timestamp_for_dob and main_id is not null
            value: max(properties_birthday)

        - tablevar:
            name: age_from_dob
            ref:
              input: identifies_1
            filter: max_timestamp_dob is not null and max_timestamp_dob != ''
            # Here you can use any date value instead of '2022.09.23' as a reference
            value: >-
              max(CASE WHEN CURRENT_TIMESTAMP() < TO_DATE('2022.09.23', 'YYYY.MM.DD')
              THEN
              (CASE WHEN dateadd(year, datediff (year, max_timestamp_dob, CURRENT_TIMESTAMP()), max_timestamp_dob) > CURRENT_TIMESTAMP()
              THEN datediff(year, max_timestamp_dob, CURRENT_TIMESTAMP()) - 1
              ELSE datediff(year, max_timestamp_dob, CURRENT_TIMESTAMP())
              END)
              ELSE
              (CASE WHEN dateadd(year, datediff (year, max_timestamp_dob, TO_DATE('2022.09.23', 'YYYY.MM.DD')), max_timestamp_dob) > TO_DATE('2022.09.23', 'YYYY.MM.DD')
              THEN datediff(year, max_timestamp_dob, TO_DATE('2022.09.23', 'YYYY.MM.DD')) - 1
              ELSE datediff(year, max_timestamp_dob, TO_DATE('2022.09.23', 'YYYY.MM.DD'))
              END)
              END)

        - feature:
            name: age_in_years
            value: age_from_dob

# Total carts
        - tablefeature:
            name: total_carts
            ref:
              input: product_added_1
            filter: main_id != '' and main_id IS NOT NULL and properties_cart_id IS NOT NULL
            value: count(distinct properties_cart_id)

# Total products added to the cart
        - tablevfeature:
            name: total_products_added_to_cart
            ref:
              input: product_added_1
            filter: main_id != '' and main_id IS NOT NULL
            value: count(*)

# Days since last added
        - tablevar:
            name: max_timestamp_for_cart_add
            ref:
              input: product_added_1
            filter: timestamp is not null and timestamp != '' and main_id is not null
            value: max(timestamp)

        - feature:
            name: days_since_last_added
            value: datediff(day, date(max_timestamp_for_cart_add), TO_DATE('2022.09.23', 'YYYY.MM.DD'))

# Products added in past n days for n=300 and 500
        - tablefeature:
            name: products_added_in_past_300_days
            ref:
              input: product_added_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 300
              and main_id is not null
            value: array_agg(cast(PROPERTIES_PRODUCT_ID as varchar))

        - tablefeature:
            name: products_added_in_past_500_days
            ref:
              input: product_added_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 500
              and main_id is not null
            value: array_agg(cast(PROPERTIES_PRODUCT_ID as varchar))

# Carts in past n days for n=300 and 100
        - tablefeature:
            name: carts_in_past_300_days
            ref:
              input: product_added_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 300
               and main_id is not null
            value: count(distinct PROPERTIES_CART_ID)

        - tablefeature:
            name: carts_in_past_100_days
            ref:
              input: product_added_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 100
               and main_id is not null
            value: count(distinct PROPERTIES_CART_ID)

# Items Purchased ever
        - tablefeature:
            name: flat_properties_products
            ref:
              input: order_completed_1
            filter: main_id is not null
            value: (select array_agg(distinct t.value['product_id']) from order_completed_1, TABLE(FLATTEN(parse_json(properties_products))) t)

# Categories Purchased ever
        - tablefeature:
            name: categories_purchased_ever
            ref:
              input: order_completed_1
            filter: main_id is not null
            value: (select array_agg(distinct t.value['category_l1']) from order_completed_1, TABLE(FLATTEN(parse_json(properties_products))) t)

# Average transaction value
        - tablefeature:
            name: avg_transaction_value
            ref:
              input: order_completed_1
            filter: main_id is not null
            value: avg(properties_total)

# Average unit per transaction
        - tablefeature:
            name: avg_unit_per_transaction
            ref:
              input: order_completed_1
            filter: main_id is not null
            value: avg(array_size(parse_json(properties_products)))

# Median transaction value
        - tablefeature:
            name: median_transaction_value
            ref:
              input: order_completed_1
            filter: main_id is not null
            value: median(properties_total)

# Total amount spent
        - tablefeature:
            name: total_amt_spent
            ref:
              input: order_completed_1
            filter: main_id is not null
            value: sum(properties_total)

# Highest transaction value
        - tablefeature:
            name: highest_transaction_value
            ref:
              input: order_completed_1
            filter: main_id is not null
            value: max(properties_total)

# Total transactions
        - tablefeature:
            name: total_transactions
            ref:
              input: order_completed_1
            filter: main_id is not null
            value: count(*)

# Has credit card?
        - tablefeature:
            name: has_credit_card
            ref:
              input: checkout_step_completed_1
            filter: main_id is not null
            value: max(case when lower(properties_payment_method) in ('MasterCard') then 1 else 0 end)

# Last transaction
        - tablevar:
            name: max_timestamp_for_txn
            ref:
              input: order_completed_1
            filter: properties_total is not null
            value: max(timestamp)

        - tablefeature:
            name: last_transaction
            ref:
              input: order_completed_1
            filter: timestamp = max_timestamp_for_txn and main_id is not null
            value: max(properties_total)

# Amount spent in past n days for n=300 and 100
        - tablefeature:
            name: amt_spent_in_past_300_days
            ref:
              input: order_completed_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 300
              and main_id is not null and PROPERTIES_TOTAL is not null
            value: sum(cast(PROPERTIES_TOTAL as real))

        - tablefeature:
            name: amt_spent_in_past_100_days
            ref:
              input: order_completed_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 100
              and main_id is not null and PROPERTIES_TOTAL is not null
            value: sum(cast(PROPERTIES_TOTAL as real))

# Transactions in past n days for n=300 and 100
        - tablefeature:
            name: transactions_in_past_300_days
            ref:
              input: order_completed_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 300
              and main_id is not null and timestamp is not null and timestamp != ''
            value: count(distinct date(timestamp))

        - tablefeature:
            name: transactions_in_past_100_days
            ref:
              input: order_completed_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 100
              and main_id is not null and timestamp is not null and timestamp != ''
            value: count(distinct date(timestamp))

# Is churned in past n days for n=300 and 50
        - tablevar:
            name: days_since_last_seen_for_churn
            ref:
              input: tracks_1
            filter: main_id is not null
            value: datediff(day, date(max(timestamp)), CURRENT_TIMESTAMP())

        - tablefeature:
            name: is_churned_300_days
            ref:
              input: tracks_1
            filter: main_id is not null and days_since_last_seen_for_churn >= 0
            value: max(case when days_since_last_seen_for_churn > 300 then 1 else 0 end)

        - tablefeature:
            name: is_churned_50_days
            ref:
              input: tracks_1
            filter: main_id is not null and days_since_last_seen_for_churn >= 0
            value: max(case when days_since_last_seen_for_churn > 50 then 1 else 0 end)

# Active days in past n days for n=300 and 100
        - tablefeature:
            name: active_days_in_past_300_days
            ref:
              input: tracks_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 300
              and main_id is not null and timestamp is not null and timestamp != ''
            value: count(distinct date(timestamp))

        - tablefeature:
            name: active_days_in_past_100_days
            ref:
              input: tracks_1
            filter: datediff(day, date(timestamp), TO_DATE('2022.09.23', 'YYYY.MM.DD')) <= 100
              and main_id is not null and timestamp is not null and timestamp != ''
            value: count(distinct date(timestamp))