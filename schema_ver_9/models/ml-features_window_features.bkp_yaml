models:
  - name: e_comm_feature_id_stitcher
    model_type: id_stitcher
    model_spec:
      validity_time: 24h # 1 day
      entity_key: user
      main_id_type: main_id
      edge_sources:
        - inputs/order_completed_view
      # Specify from inputs.yaml file
        # - inputs/identifies_1
        # - inputs/tracks_1
        # - inputs/product_added_1
        # - inputs/order_completed_1
        # - inputs/checkout_step_completed_1
        # - inputs/order_completed_view
  - name: e_comm_feature
    model_type: feature_table_model
    model_spec:
      validity_time: 24h # 1 day
      id_stitching:
        models/e_comm_feature_id_stitcher
      macros:
        - name: session_cutoff_in_sec
          value: 1800
        - name: churn_days
          value: 90
      features:
# Category and product features
        - inputvar:
            name: spend_per_category
            ref: inputs/order_completed_view
            value: sum(amount_spent)
            window:
              partition_by:
                - category_l1
                - main_id
        - tablefeature:
            name: highest_spent_category
            ref: inputs/order_completed_view
            value: first_value(category_l1)
            window:
              order_by:
                - spend_per_category desc
        - tablefeature:
            name: categories_purchased_ever
            ref: inputs/order_completed_view
            value: listagg(category_l1)

# # Defining Sessions
#         - inputvar:
#             name: prev_ts
#             ref: inputs/tracks_1
#             value: lag(timestamp, 1, timestamp)
#             window:
#               order_by: 
#                 - timestamp asc
#         - inputvar:
#             name: session_id
#             ref: inputs/tracks_1
#             value: sum(case when coalesce(datediff(second, prev_ts, timestamp),0) > 1800 then 1 else 0 end) #ToDo: Verify that macros work in inputvars
#             window:
#                order_by:
#                  - timestamp asc
# # Session Start and End Time
#         - inputvar:
#             name: session_start_time
#             ref: inputs/tracks_1
#             value: min(timestamp)
#             window:
#                partition_by:
#                   - session_id
#         - inputvar:
#             name: session_end_time
#             ref: inputs/tracks_1
#             value: max(timestamp)
#             window:
#                partition_by:
#                   - session_id
#         - inputvar:
#             name: session_row_number
#             ref: inputs/tracks_1
#             value: row_number()
#             window:
#                 partition_by: 
#                    - session_id
#                 order_by:
#                    - timestamp desc
# # Features - session length overall
#         - tablefeature:
#             name: n_sessions_overall
#             ref: inputs/tracks_1
#             value: count(distinct session_id)
# # 
#         - tablefeature:
#             name: n_sessions_last_week
#             ref: inputs/tracks_1
#             value: count(distinct session_id)
#             filter: datediff(day, date(session_start_time), date(to_timestamp_tz(replace('{{timestamp}}',' UTC')))) between 0 and 7

#         - tablefeature:
#             name: avg_session_length_overall
#             ref: inputs/tracks_1
#             value: avg(datediff(second, session_start_time, session_end_time))
#             filter: session_row_number = 1
#         - tablefeature:
#             name: avg_session_length_last_week
#             ref: inputs/tracks_1
#             value: avg(datediff(second, session_start_time, session_end_time))
#             filter: session_row_number = 1 and datediff(day, date(session_start_time), date(to_timestamp_tz(replace('{{timestamp}}',' UTC')))) between 0 and 7